name: fetch

on:
  schedule:
    # 每 5 分鐘觸發一次（UTC）。是否執行由下方 gate 腳本決定（台北時區 + 邊緣分鐘）。
    - cron: "*/5 * * * *"
  workflow_dispatch:
    inputs:
      OPEN_DATE:
        description: "指定抓取日期(YYYY-MM-DD)，留空則抓台北今天"
        required: false
        default: ""
      FORCE:
        description: "true=無視時間門檻立即跑"
        required: false
        default: "false"

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-24.04
    env:
      OPEN_DATE: ${{ github.event.inputs.OPEN_DATE }}
      FORCE: ${{ github.event.inputs.FORCE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install deps (if any)
        run: npm ci --no-audit --no-fund

      - name: Decide to run this minute (Taipei window + 5-min edge)
        id: when
        shell: bash
        run: |
          force="${FORCE:-false}"

          if [[ "$force" == "true" ]]; then
            echo "run_this_minute=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # 以台北日曆判斷
          TZ=Asia/Taipei now_d=$(date +%F)
          if [[ -n "${OPEN_DATE}" && "${OPEN_DATE}" != "${now_d}" ]]; then
            echo "backfill for ${OPEN_DATE} (now=${now_d}, Taipei) -> run"
            echo "run_this_minute=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          TZ=Asia/Taipei hour=$(date +%H)
          TZ=Asia/Taipei minute=$(date +%M)
          hhmm="${hour}${minute}"

          in_window=false
          [[ "$hhmm" > "0704" && "$hhmm" < "2356" ]] && in_window=true

          mod=$((10#$minute % 5))
          on_edge=false
          [[ $mod -eq 1 || $mod -eq 2 ]] && on_edge=true

          echo "now(Taipei)=$hour:$minute in_window=$in_window on_edge=$on_edge"
          if [[ "$in_window" == "true" && "$on_edge" == "true" ]]; then
            echo "run_this_minute=true" >> "$GITHUB_OUTPUT"
          else
            echo "run_this_minute=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set OPEN_DATE to Taipei today if empty
        if: steps.when.outputs.run_this_minute == 'true'
        shell: bash
        run: |
          if [[ -z "${OPEN_DATE}" ]]; then
            TZ=Asia/Taipei echo "OPEN_DATE=$(date +%F)" >> $GITHUB_ENV
          else
            echo "OPEN_DATE=${OPEN_DATE}" >> $GITHUB_ENV
          fi
          echo "Resolved OPEN_DATE=${OPEN_DATE:-$(date +%F)} (Taipei)"

      - name: Fetch Bingo via API
        if: steps.when.outputs.run_this_minute == 'true'
        env:
          OPEN_DATE: ${{ env.OPEN_DATE }}
        run: node scripts/fetch_bingo_api.mjs

      - name: Upload last fetch artifacts
        if: steps.when.outputs.run_this_minute == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: last-fetch-json
          path: artifacts/last_fetch/*.json
          if-no-files-found: warn

      - name: Commit & Push changes
        if: steps.when.outputs.run_this_minute == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "chore(fetch): update draws.json for ${OPEN_DATE}"
            git push
          else
            echo "No changes to commit."
          fi
