name: fetch

on:
  schedule:
    - cron: '*/1 23 * * *'     # UTC 23:00–23:59 → 台北 07:00–07:59
    - cron: '*/1 0-15 * * *'   # UTC 00:00–15:59 → 台北 08:00–23:59
  workflow_dispatch:
    inputs:
      force:
        description: '強制執行（忽略時間條件）'
        required: false
        default: 'false'

permissions:
  contents: write

jobs:
  fetch:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - run: npm ci --no-audit --no-fund

      - name: Decide whether to run this minute
        id: gate
        shell: bash
        run: |
          force="${{ github.event.inputs.force || 'false' }}"
          if [[ "$force" == "true" ]]; then
            echo "👉 Force mode: always run"
            echo "run_this_minute=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          TZ=Asia/Taipei hour=$(date +%H)
          TZ=Asia/Taipei minute=$(date +%M)
          hhmm="${hour}${minute}"

          in_window=false
          if [[ "$hhmm" > "0704" && "$hhmm" < "2356" ]]; then
            in_window=true
          fi

          mod=$((10#$minute % 5))
          on_edge=false
          if [[ $mod -eq 1 || $mod -eq 2 ]]; then
            on_edge=true
          fi

          echo "now(Taipei)=$hour:$minute in_window=$in_window on_edge=$on_edge"
          if [[ "$in_window" == "true" && "$on_edge" == "true" ]]; then
            echo "run_this_minute=true" >> "$GITHUB_OUTPUT"
          else
            echo "run_this_minute=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Skip when outside window
        if: steps.gate.outputs.run_this_minute == 'false'
        run: |
          echo "👉 Skipped by gate."
          exit 0

      - name: Run fetch script (today in Taipei, pageSize=50)
        env:
          PAGE_SIZE: '50'
          MAX_PAGES: '20'
        run: node scripts/fetch_bingo.mjs

      - name: Show tail of draws.json
        run: |
          if command -v jq >/dev/null 2>&1; then
            tail -n +1 web/data/draws.json | jq '.[-5:]'
          fi

      - name: Commit & push if changed
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if ! git diff --quiet -- web/data/draws.json; then
            git add web/data/draws.json
            git commit -m "chore(data): update draws.json [skip ci]"
            git push
            echo "Pushed updated JSON."
          else
            echo "No changes to draws.json."
          fi
